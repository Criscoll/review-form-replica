{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/cristian/Documents/projects/okendo-tech-challenge/src/components/RatingBar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport CircleButton from './CircleButton';\nexport default function RatingBar(props) {\n  _s();\n\n  const [rating, setRating] = useState();\n  useEffect(() => {\n    props.setRating(rating);\n  }, [rating]);\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: 'rating-text' + props.inputChecked && props.infoMissing ? 'red' : '',\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rating-bar-container\",\n      children: [/*#__PURE__*/_jsxDEV(CircleButton, {\n        value: 1,\n        currentRating: rating,\n        setRating: setRating,\n        hasConnectingBar: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CircleButton, {\n        value: 2,\n        currentRating: rating,\n        setRating: setRating,\n        hasConnectingBar: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CircleButton, {\n        value: 3,\n        currentRating: rating,\n        setRating: setRating,\n        hasConnectingBar: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CircleButton, {\n        value: 4,\n        currentRating: rating,\n        setRating: setRating,\n        hasConnectingBar: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CircleButton, {\n        value: 5,\n        currentRating: rating,\n        setRating: setRating,\n        hasConnectingBar: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rating-name\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Poor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Excellent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), props.infoMissing ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"missing-info\",\n      children: \"Please select a rating\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RatingBar, \"EFE6aG52ZnsRCJlESTWHljHaap0=\");\n\n_c = RatingBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"RatingBar\");","map":{"version":3,"sources":["/home/cristian/Documents/projects/okendo-tech-challenge/src/components/RatingBar.jsx"],"names":["React","useState","useEffect","CircleButton","RatingBar","props","rating","setRating","console","log","inputChecked","infoMissing","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACvC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,EAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,KAAK,CAACE,SAAN,CAAgBD,MAAhB;AACD,GAFQ,EAEN,CAACA,MAAD,CAFM,CAAT;AAIAE,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAEA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE;AACE,MAAA,SAAS,EACP,gBAAgBA,KAAK,CAACK,YAAtB,IAAsCL,KAAK,CAACM,WAA5C,GAA0D,KAA1D,GAAkE,EAFtE;AAAA,gBAKGN,KAAK,CAACO;AALT;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,8BACE,QAAC,YAAD;AACE,QAAA,KAAK,EAAE,CADT;AAEE,QAAA,aAAa,EAAEN,MAFjB;AAGE,QAAA,SAAS,EAAEC,SAHb;AAIE,QAAA,gBAAgB,EAAE;AAJpB;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,YAAD;AACE,QAAA,KAAK,EAAE,CADT;AAEE,QAAA,aAAa,EAAED,MAFjB;AAGE,QAAA,SAAS,EAAEC,SAHb;AAIE,QAAA,gBAAgB,EAAE;AAJpB;AAAA;AAAA;AAAA;AAAA,cAPF,eAaE,QAAC,YAAD;AACE,QAAA,KAAK,EAAE,CADT;AAEE,QAAA,aAAa,EAAED,MAFjB;AAGE,QAAA,SAAS,EAAEC,SAHb;AAIE,QAAA,gBAAgB,EAAE;AAJpB;AAAA;AAAA;AAAA;AAAA,cAbF,eAmBE,QAAC,YAAD;AACE,QAAA,KAAK,EAAE,CADT;AAEE,QAAA,aAAa,EAAED,MAFjB;AAGE,QAAA,SAAS,EAAEC,SAHb;AAIE,QAAA,gBAAgB,EAAE;AAJpB;AAAA;AAAA;AAAA;AAAA,cAnBF,eAyBE,QAAC,YAAD;AACE,QAAA,KAAK,EAAE,CADT;AAEE,QAAA,aAAa,EAAED,MAFjB;AAGE,QAAA,SAAS,EAAEC,SAHb;AAIE,QAAA,gBAAgB,EAAE;AAJpB;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eAwCE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAxCF,EA4CGF,KAAK,CAACM,WAAN,gBACC;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,GAEG,IA9CN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkDD;;GA3DuBP,S;;KAAAA,S","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CircleButton from './CircleButton';\n\nexport default function RatingBar(props) {\n  const [rating, setRating] = useState();\n\n  useEffect(() => {\n    props.setRating(rating);\n  }, [rating]);\n\n  console.log(props);\n\n  return (\n    <React.Fragment>\n      <p\n        className={\n          'rating-text' + props.inputChecked && props.infoMissing ? 'red' : ''\n        }\n      >\n        {props.name}\n      </p>\n      <div className=\"rating-bar-container\">\n        <CircleButton\n          value={1}\n          currentRating={rating}\n          setRating={setRating}\n          hasConnectingBar={false}\n        />\n        <CircleButton\n          value={2}\n          currentRating={rating}\n          setRating={setRating}\n          hasConnectingBar={true}\n        />\n        <CircleButton\n          value={3}\n          currentRating={rating}\n          setRating={setRating}\n          hasConnectingBar={true}\n        />\n        <CircleButton\n          value={4}\n          currentRating={rating}\n          setRating={setRating}\n          hasConnectingBar={true}\n        />\n        <CircleButton\n          value={5}\n          currentRating={rating}\n          setRating={setRating}\n          hasConnectingBar={true}\n        />\n      </div>\n      <div className=\"rating-name\">\n        <p>Poor</p>\n        <p>Excellent</p>\n      </div>\n      {props.infoMissing ? (\n        <p className=\"missing-info\">Please select a rating</p>\n      ) : null}\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}