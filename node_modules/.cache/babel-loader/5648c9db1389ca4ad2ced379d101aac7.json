{"ast":null,"code":"import _slicedToArray from\"/home/cristian/Documents/projects/okendo-tech-challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useState,useEffect}from'react';export default function CircleButton(props){var _useState=useState('number-button'),_useState2=_slicedToArray(_useState,2),buttonClass=_useState2[0],setButtonClass=_useState2[1];var _useState3=useState('connecting-bar'),_useState4=_slicedToArray(_useState3,2),barClass=_useState4[0],setBarClass=_useState4[1];useEffect(function(){if(props.currentRating>=props.value){setButtonClass('number-button-active');setBarClass('connecting-bar-active');}else{setButtonClass('number-button');setBarClass('connecting-bar');}},[props]);function handleClick(){props.setRating(props.value);}return/*#__PURE__*/_jsxs(React.Fragment,{children:[props.hasConnectingBar?/*#__PURE__*/_jsx(\"div\",{className:barClass}):null,/*#__PURE__*/_jsx(\"div\",{className:buttonClass,onClick:handleClick,children:/*#__PURE__*/_jsx(\"div\",{className:\"rating-number\",children:props.value})})]});}","map":{"version":3,"sources":["/home/cristian/Documents/projects/okendo-tech-challenge/src/components/CircleButton.jsx"],"names":["React","useState","useEffect","CircleButton","props","buttonClass","setButtonClass","barClass","setBarClass","currentRating","value","handleClick","setRating","hasConnectingBar"],"mappings":"sQAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CAEA,cAAe,SAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,eACJH,QAAQ,CAAC,eAAD,CADJ,wCACnCI,WADmC,eACtBC,cADsB,8BAEVL,QAAQ,CAAC,gBAAD,CAFE,yCAEnCM,QAFmC,eAEzBC,WAFyB,eAI1CN,SAAS,CAAC,UAAM,CACd,GAAIE,KAAK,CAACK,aAAN,EAAuBL,KAAK,CAACM,KAAjC,CAAwC,CACtCJ,cAAc,CAAC,sBAAD,CAAd,CACAE,WAAW,CAAC,uBAAD,CAAX,CACD,CAHD,IAGO,CACLF,cAAc,CAAC,eAAD,CAAd,CACAE,WAAW,CAAC,gBAAD,CAAX,CACD,CACF,CARQ,CAQN,CAACJ,KAAD,CARM,CAAT,CAUA,QAASO,CAAAA,WAAT,EAAuB,CACrBP,KAAK,CAACQ,SAAN,CAAgBR,KAAK,CAACM,KAAtB,EACD,CAED,mBACE,MAAC,KAAD,CAAO,QAAP,YACGN,KAAK,CAACS,gBAAN,cAAyB,YAAK,SAAS,CAAEN,QAAhB,EAAzB,CAA4D,IAD/D,cAEE,YAAK,SAAS,CAAEF,WAAhB,CAA6B,OAAO,CAAEM,WAAtC,uBACE,YAAK,SAAS,CAAC,eAAf,UAAgCP,KAAK,CAACM,KAAtC,EADF,EAFF,GADF,CAQD","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport default function CircleButton(props) {\n  const [buttonClass, setButtonClass] = useState('number-button');\n  const [barClass, setBarClass] = useState('connecting-bar');\n\n  useEffect(() => {\n    if (props.currentRating >= props.value) {\n      setButtonClass('number-button-active');\n      setBarClass('connecting-bar-active');\n    } else {\n      setButtonClass('number-button');\n      setBarClass('connecting-bar');\n    }\n  }, [props]);\n\n  function handleClick() {\n    props.setRating(props.value);\n  }\n\n  return (\n    <React.Fragment>\n      {props.hasConnectingBar ? <div className={barClass}></div> : null}\n      <div className={buttonClass} onClick={handleClick}>\n        <div className=\"rating-number\">{props.value}</div>\n      </div>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}